---

export interface Props {
  title: string;
  authors: [{
    name: string;
    url: string;
    avatar: string;
  }];
  date: string;
  description: string;
  tags: string[];
  image?: string;
  alt?: string;
  url: string;
}

const { 
  title,
  authors,
  date,
  description,
  tags,
  image,
  alt,
  url
} = Astro.props as Props;

import Tags from './Tags.astro';

---
<article class="card">
  {image && (
    <div class="img">
      <img src={image} alt={alt} />
    </div>
  )}
  <!-- If there's a better way of putting the image off to the side let me know -->
  <div class="wrapper">
    <header>
      <a href={url}>
        <h2>{title}</h2>
      </a>
    </header>
    <div class="authors">
      {authors.map((author, index, array) => {
        if(author.url){
          return (<span><a href={author.url}>{author.name}</a>{index < array.length-1 && <span>, </span>}</span>)
        } else {
          return (<span>{author.name}{index < array.length-1 && <span>, </span>}</span>)
        }
      })}
      <span aria-hidden="true">â€¢</span>
      <span>{date}</span>
    </div>
    <p class="description">{description}</p>
    <div>
      <Tags tags={tags} />
    </div>
  </div>
</article>

<style>
  /* Ok i think it's nearly done.
   * there's basically just this one issue where
   * the width of the image div doesn't shrink if
   * the image is small but that's whatever rn
   * (image of bug: https://share.cleanshot.com/5x7rYBTg) */

  .card {
    display: flex;
    align-content: center;
    gap: var(--space-xs);
    /* janky hack */
    margin-left: calc(-1 * var(--space-xs));
    margin-right: calc(-1 * var(--space-xs));
    padding: var(--space-xs);
    border-radius: var(--space-2xs);
    /* max-height: 20ch; */
    overflow: hidden;
  }

  .wrapper > * + * {
    margin-top: var(--space-2xs);
  }
  .card:hover{
    background-color: rgba(var(--purble-hover), 0.33);
  }

  .card .img {
    /* For some reason just setting the width won't work here,
       so this is done instead. ðŸ’»ðŸ”¨ */
    max-width: 20%; 
    /* min-width: 20%; */
    height: auto;
    border-radius: var(--space-3xs);
    /* margin-inline-end: 2ch; */
    display: flex;
    align-items: center;
    text-align: center;
    /* flex: 0 0 auto; */
  }

  .card img {
    object-fit: cover;
    max-height: 18ch;
    height: 100%;
    border-radius: var(--space-3xs);
    margin-inline: auto;
  }

  .card header > h2 {
    line-height: 1;
    font-size: var(--step-1);
    font-weight: 500;
  }

  .card .authors {
    margin-top: 0;
  }

  .card .authors > *,
  .card .authors > * * {
    font-size: var(--step-0);
    font-weight: 90;
    font-family: var(--barlow);
  }

  .card .authors a:hover {
    text-decoration: underline;
  }

  .card .description {
    font-size: var(--step--1);
    font-weight: 400;
    line-height: 1.5;
    margin-block-end: 0.5rem;
  }  

  a {
    text-decoration: none;
    color: inherit;
  }
  a:hover{
    text-decoration: underline;
  }

</style>